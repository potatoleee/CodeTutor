
.text-liner-gradient{
    background: $gradient;
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
}

.fz-50{
    font-size: 50px;
}
.fz-48{
    font-size: 48px;
}

.text-underLine-middle{
    position: relative;
    &::before{
        position: absolute;
        content: "";
        background-color: $primary;
        width: 50px;
        height: 3px;
        bottom: -1px;
        left: 50%;
        transform: translateX(-50%);



    }
}

.avator-100{
    width: 100px;
    max-width: none;
}

.list-style-color-primary{
    &::marker{
        color: $primary;
    }
}
.list-style-square{
    list-style: square;
}
.list-style-position-inside{
    list-style-position: inside;
}

.w-24px{
    width: 24px;
}
.border-radius-4px{
    border-radius: 4px;
}

.c-pointer{
    cursor: pointer;
}


.datepicker-picker{
    color: black;
}

$utilities: map-merge(
    $utilities,(
     
      "opacity": (
        property: opacity,
        // class: opac,
        values: (
          0: 0,
          25: .25,
          30: .3,
          50: .5,
          70: .7,
          85: 0.85,
          100: 1,
        )
      ),
      "background-repeat": (
        property: background-repeat,
        class: bg,
        values: (repeat, no-repeat, repeat-x, repeat-y, round, space)
      ),
      "background-size": (
        property: background-size,
        class: bg,
        values: (auto, cover, contain)
      ),

    
    "font-size": map-merge(
      map-get($utilities,"font-size"),
      (
        responsive: true,
        
      )
    ),
    "font-weight": (
      responsive: true,
      property: font-weight,
      class: fw,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "border-color": (
      responsive: true,
      property: border-color,
      class: border,
      values: map-merge($theme-colors, ("white": $white))
    ),

    "rounded-top": (
        property: border-top-left-radius border-top-right-radius,
        class: rounded-top,
        values: (
        null: $border-radius,
        0: 0,
        1: $border-radius-sm,
        2: $border-radius,
        3: $border-radius-lg,
        circle: 50%,
        pill: $border-radius-pill
      )
      ),
      "rounded-end": (
        property: border-top-right-radius border-bottom-right-radius,
        class: rounded-end,
        values: (
            null: $border-radius,
            0: 0,
            1: $border-radius-sm,
            2: $border-radius,
            3: $border-radius-lg,
            circle: 50%,
            pill: $border-radius-pill
          )
      ),
      "rounded-bottom": (
        property: border-bottom-right-radius border-bottom-left-radius,
        class: rounded-bottom,
        values: (
            null: $border-radius,
            0: 0,
            1: $border-radius-sm,
            2: $border-radius,
            3: $border-radius-lg,
            circle: 50%,
            pill: $border-radius-pill
          )
      ),
      "rounded-start": (
        property: border-bottom-left-radius border-top-left-radius,
        class: rounded-start,
        values: (
            null: $border-radius,
            0: 0,
            1: $border-radius-sm,
            2: $border-radius,
            3: $border-radius-lg,
            circle: 50%,
            pill: $border-radius-pill
          )
      ),
    
   
    )
  );